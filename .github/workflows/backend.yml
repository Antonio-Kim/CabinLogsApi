name: Backend
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_05996BE5163F40A8AA3D2B0BB8FD1874 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_1D01D05CB7874DE98B8EC71601A83E67 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_30620A5E42F54038ABE25F3B038E7F48 }}

      - name: Set up .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CabinLogsApi'
          slot-name: 'Production'
          package: .

      - name: Apply database migrations
        run: |
          dotnet tool restore
          dotnet ef database update --project CabinLogsApi/CabinLogsApi.csproj --context ApplicationDbContext
        env:
          ASPNETCORE_ENVIRONMENT: Production
          CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
